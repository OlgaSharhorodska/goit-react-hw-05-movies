{"version":3,"file":"static/js/503.5f9edac7.chunk.js","mappings":"yPAKMA,EAAW,mCAAG,WAAMC,GAAN,uFACKC,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,EAAAA,UADkB,OAHV,UAGU,OACUF,EADV,YAErB,CACEG,OAAQ,CAAEC,QAASF,EAAAA,EAAAA,WAJL,cACZG,EADY,yBAQXA,GARW,2CAAH,sDAUjB,I,uCCbaC,EAAWC,EAAAA,GAAAA,GAAH,gHAQRC,EAAYD,EAAAA,GAAAA,IAAH,uOAUTE,EAAgBF,EAAAA,GAAAA,IAAH,yC,sCC4C1B,EAxDa,WACX,OAA4BG,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KAGMhB,GADWiB,EAAAA,EAAAA,MACGC,SAoBpB,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZR,GAAU,GACVE,GAAS,GAHG,SAMFf,EAAYC,GANV,gBAKFe,EALE,EAKVM,KAAQN,KAEVC,EAAQD,GAPI,kDASZD,GAAS,GATG,yBAWZF,GAAU,GAXE,6EAAH,qDAcbQ,EAAQpB,EACT,GAAE,CAACA,KAGF,UAACM,EAAD,WACGK,IAAU,SAAC,IAAD,IACVE,IAAS,SAACS,EAAA,EAAD,IACTP,EAAKQ,KAAI,YAA4C,IAAzCvB,EAAwC,EAAxCA,GAAIwB,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,2BACE,SAAClB,EAAD,WACE,gBACEmB,IACEH,EACI,kCAAoCA,EACpCI,EAENC,IAAI,QACJC,MAAO,SAGX,UAACrB,EAAD,YACE,uBAAIgB,KACJ,yBAAG,cAAYC,UAdV1B,EAkBZ,IACAe,EAAKgB,OAAS,IAAK,uBAAG,0BAG5B,C,8EC5DYC,E,QAAYzB,GAAAA,IAAH,qE,SCKtB,EAJmB,WACjB,OAAO,SAACyB,EAAD,UAAW,mCACnB,C,4FCHYC,EAAa1B,EAAAA,GAAAA,IAAH,0EAMV2B,EAAc3B,EAAAA,GAAAA,IAAH,0F,SCLX4B,EAAS,WACpB,OACE,UAACF,EAAD,YACE,SAACC,EAAD,UAAa,gBACb,SAAC,KAAD,CACEE,SAAS,EACTC,OAAO,KACPP,MAAM,KACNQ,UAAU,oBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,OAAQ,CAAC,UAAW,eAI3B,C,uDClBM,IAAMvC,EAAO,CAClBwC,SAAU,gCACVC,QAAS,mCACTC,WAAY,mC","sources":["js/apiCast.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/ErrMessage/ErrMessage.styled.js","components/ErrMessage/ErrMessage.jsx","components/Loader/loader.styled.js","components/Loader/loader.jsx","js/refs.js"],"sourcesContent":["import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `movie/`;\n\nconst getFilmCast = async id => {\n  const responce = await axios.get(\n    `${refs.BASE_URL}${END_POINT}${id}/credits`,\n    {\n      params: { api_key: refs.API_KEY },\n    }\n  );\n\n  return responce;\n};\nexport default getFilmCast;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  list-style: none;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n`;\n\nexport const PhotoWrap = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n    0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n\n  img {\n    display: block;\n  }\n`;\nexport const ActorInfoWrap = styled.div`\n  width: 150px;\n`;\n","import getFilmCast from 'js/apiCast';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorInfoWrap, CastList, PhotoWrap } from './Cast.styled';\nimport defaultPhoto from '../../img/bart.jpg';\nimport { Loader } from 'components/Loader/loader';\nimport ErrMessage from 'components/ErrMessage/ErrMessage';\n\nconst Cast = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [cast, setCast] = useState([]);\n\n  const moviesId = useParams();\n  const id = moviesId.moviesId;\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { cast },\n        } = await getFilmCast(id);\n        setCast(cast);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getCast(id);\n  }, [id]);\n\n  return (\n    <CastList>\n      {loader && <Loader />}\n      {error && <ErrMessage />}\n      {cast.map(({ id, profile_path, name, character }) => {\n        return (\n          <li key={id}>\n            <PhotoWrap>\n              <img\n                src={\n                  profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                    : defaultPhoto\n                }\n                alt=\"actor\"\n                width={150}\n              />\n            </PhotoWrap>\n            <ActorInfoWrap>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </ActorInfoWrap>\n          </li>\n        );\n      })}\n      {cast.length < 1 && <p>Without information</p>}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React from 'react';\nimport { ErrorText } from './ErrMessage.styled';\n\nconst ErrMessage = () => {\n  return <ErrorText>Error, Please reload this page!</ErrorText>;\n};\n\nexport default ErrMessage;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { Hourglass } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <Hourglass\n        visible={true}\n        height=\"50\"\n        width=\"50\"\n        ariaLabel=\"hourglass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        colors={['#306cce', '#72a1ed']}\n      />\n    </LoaderWrap>\n  );\n};\n","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '9322e843d0da07a43a222238c5af1c78',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n\n//      --url 'https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&language=en-US&page=1' \\\n"],"names":["getFilmCast","id","axios","refs","params","api_key","responce","CastList","styled","PhotoWrap","ActorInfoWrap","useState","loader","setLoader","error","setError","cast","setCast","useParams","moviesId","useEffect","getCast","data","ErrMessage","map","profile_path","name","character","src","defaultPhoto","alt","width","length","ErrorText","LoaderWrap","LoadMessage","Loader","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","BASE_URL","API_KEY","POSTER_URL"],"sourceRoot":""}
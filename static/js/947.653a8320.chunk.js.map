{"version":3,"file":"static/js/947.653a8320.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MoveDetails.styled.js","js/apiFilm.js","components/AdditInform/AdditInform.styled.js","components/AdditInform/AdditInform.jsx","Pages/MovieDetails/MoveDetails.jsx","components/ErrMessage/ErrMessage.styled.js","components/ErrMessage/ErrMessage.jsx","components/Loader/loader.styled.js","components/Loader/loader.jsx","components/Section/Section.styled.js","js/refs.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Genres = styled.div`\n  display: flex;\n  gap: 10px;\n`;\nexport const FilmPageWrap = styled.div`\n  display: block;\n\n  button {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  width: 400px;\n  border-radius: 10px;\n  background-color: white;\n  padding: 10px;\n\n  box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n    0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n\n  img {\n    min-width: 100%;\n    border-radius: 10px;\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 10px;\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  font-size: 20px;\n  padding: 10px;\n`;\n\nexport const BackLink = styled.p`\n  display: block;\n  font-size: 15px;\n  font-weight: 600;\n  padding: 10px 20px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n  width: max-content;\n\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(204, 203, 203);\n  }\n\n  &:active {\n    background-color: rgb(179, 179, 179);\n  }\n`;\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `movie/`;\n\nconst getFilmInfo = async id => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}${id}`, {\n    params: { api_key: refs.API_KEY },\n  });\n\n  return responce;\n};\nexport default getFilmInfo;\n","import styled from 'styled-components';\n\nexport const AdditInformWrap = styled.div`\n  h3 {\n    font-size: large;\n    font-weight: 600;\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { AddInfoList } from '../../Pages/MovieDetails/MoveDetails.styled';\nimport { AdditInformWrap } from './AdditInform.styled';\nimport { Link } from 'react-router-dom';\n\nconst AdditInform = () => {\n  return (\n    <AdditInformWrap>\n      <h3>Additional information</h3>\n      <AddInfoList>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </AddInfoList>\n    </AdditInformWrap>\n  );\n};\n\nexport default AdditInform;\n","import React, { Suspense, useRef, useState } from 'react';\nimport {\n  BackLink,\n  FilmPageWrap,\n  Genres,\n  ImgWrap,\n  InfoWrap,\n} from './MoveDetails.styled';\nimport { refs } from 'js/refs';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport getFilmInfo from 'js/apiFilm';\nimport { useEffect } from 'react';\nimport { Container } from 'components/Container/Container.styled';\nimport { Section } from 'components/Section/Section.styled';\nimport defaultPhoto from '../../img/bart.jpg';\nimport { Loader } from 'components/Loader/loader';\nimport AdditInform from '../../components/AdditInform/AdditInform';\nimport ErrMessage from 'components/ErrMessage/ErrMessage';\n\nconst MoveDetails = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const moveId = useParams();\n  const id = moveId.moviesId;\n  const [film, setFilm] = useState(moveId);\n\n  const { poster_path, title, vote_average, overview, genres = [] } = film;\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state ?? '/');\n\n  // не можу зрозуміти чому в такому варіанті який пропонується не хоче працювати!!!\n\n  //   const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  // показує underfind і викидає на головну сторінку\n\n  // console.log(backLinkLocationRef);\n\n  useEffect(() => {\n    const getFilm = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const { data } = await getFilmInfo(id);\n        setFilm(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getFilm(id);\n  }, [id]);\n\n  const urlPoster = refs.POSTER_URL + poster_path;\n\n  return (\n    <main>\n      <Section>\n        {loader && <Loader />}\n        {error && <ErrMessage />}\n        {poster_path && (\n          <Container>\n            <FilmPageWrap>\n              <Link to={backLinkLocationRef.current}>\n                <BackLink>Go Back</BackLink>\n              </Link>\n              <InfoWrap>\n                <ImgWrap>\n                  <img\n                    src={poster_path ? urlPoster : defaultPhoto}\n                    alt=\"films poster\"\n                    width={300}\n                  />\n                </ImgWrap>\n                <div>\n                  <h1>{title}</h1>\n                  <div>\n                    <h2>User Score:</h2>\n                    <p> {Math.ceil(vote_average * 10)}%</p>\n                  </div>\n                  <div>\n                    <h2>Overview:</h2>\n                    <p> {overview}</p>\n                  </div>\n                  <div>\n                    <h2>Genres:</h2>\n                    <Genres>\n                      {genres.map(({ name, id }) => (\n                        <span key={id}>{name}</span>\n                      ))}\n                    </Genres>\n                  </div>\n                </div>\n              </InfoWrap>\n            </FilmPageWrap>\n            <AdditInform />\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </Container>\n        )}\n      </Section>\n    </main>\n  );\n};\n\nexport default MoveDetails;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React from 'react';\nimport { ErrorText } from './ErrMessage.styled';\n\nconst ErrMessage = () => {\n  return <ErrorText>Error, Please reload this page!</ErrorText>;\n};\n\nexport default ErrMessage;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { Hourglass } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <Hourglass\n        visible={true}\n        height=\"50\"\n        width=\"50\"\n        ariaLabel=\"hourglass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        colors={['#306cce', '#72a1ed']}\n      />\n    </LoaderWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '9322e843d0da07a43a222238c5af1c78',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n\n//      --url 'https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&language=en-US&page=1' \\\n"],"names":["Genres","styled","FilmPageWrap","ImgWrap","InfoWrap","AddInfoList","BackLink","getFilmInfo","id","axios","refs","params","api_key","responce","AdditInformWrap","to","useState","loader","setLoader","error","setError","moveId","useParams","moviesId","film","setFilm","poster_path","title","vote_average","overview","genres","location","useLocation","backLinkLocationRef","useRef","state","useEffect","getFilm","data","urlPoster","ErrMessage","current","src","defaultPhoto","alt","width","Math","ceil","map","name","Suspense","ErrorText","LoaderWrap","LoadMessage","Loader","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","Section","BASE_URL","API_KEY","POSTER_URL"],"sourceRoot":""}
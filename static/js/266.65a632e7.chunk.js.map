{"version":3,"file":"static/js/266.65a632e7.chunk.js","mappings":"sQAOA,EAJmB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,YACpB,OAAO,SAACC,EAAA,EAAD,CAAUC,MAAOF,GACzB,E,wCCAKG,EAAQ,mCAAG,oGACQC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,EAAAA,UAAb,OAHP,uBAGiD,CAC/DC,OAAQ,CACNC,QAASF,EAAAA,EAAAA,WAHE,cACTG,EADS,yBAORA,GAPQ,2CAAH,qDASd,ICgCA,EAvCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMhB,EAAW,mCAAG,sGAEhBa,GAAU,GACVE,GAAS,GAHO,SAMNZ,IANM,gBAKNc,EALM,EAKdC,KAAQD,QAEVN,EAAUM,GAPM,kDAShBF,GAAS,GATO,yBAWhBF,GAAU,GAXM,6EAAH,qDAcjBb,GACD,GAAE,KAGD,6BACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,eAAImB,MAAO,CAAEC,UAAW,OAAQC,UAAW,SAAUC,MAAO,QAA5D,SAAsE,uBAGrEV,IAAU,SAAC,IAAD,IACVF,EAAOa,OAAS,IAAK,SAAC,EAAD,CAAYvB,YAAaU,SAGlDI,IAAS,yBAAK,sCAGpB,C,kFC1CYU,EAAiBC,EAAAA,GAAAA,GAAH,sgBAyBdC,EAAYD,EAAAA,GAAAA,IAAH,qH,gDCiBtB,EApCiB,SAAC,GAAe,IAAbvB,EAAY,EAAZA,MACZyB,EAAY,CAChBC,eAAgB,OAChBN,MAAO,SAGHO,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACN,EAAD,UACGtB,EAAM6B,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACvB,OACE,yBACE,UAAC,KAAD,CAAMf,MAAOQ,EAAWQ,GAAE,kBAAaH,GAAMI,MAAOP,EAApD,WACE,0BACE,gBACEQ,IACEH,EACI,CAAC,kCAAoCA,GACrCI,EAENC,IAAI,SACJC,MAAO,SAIX,UAACd,EAAD,WAAW,IAAEO,SAdRD,EAkBZ,KAGN,C,4FCxCYS,EAAahB,EAAAA,GAAAA,IAAH,0EAMViB,EAAcjB,EAAAA,GAAAA,IAAH,0F,SCLXkB,EAAS,WACpB,OACE,UAACF,EAAD,YACE,SAACC,EAAD,UAAa,gBACb,SAAC,KAAD,CACEE,SAAS,EACTC,OAAO,KACPL,MAAM,KACNM,UAAU,oBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,OAAQ,CAAC,UAAW,eAI3B,C,sEChBYC,E,QAAUzB,GAAAA,QAAH,2C,uDCFb,IAAMpB,EAAO,CAClB8C,SAAU,gCACVC,QAAS,mCACTC,WAAY,mC","sources":["components/ListMovies/ListMovies.jsx","js/apiTrend.js","Pages/Home.jsx","components/ListMovies/ListMovies.styled.js","components/FilmItem/FilmItem.jsx","components/Loader/loader.styled.js","components/Loader/loader.jsx","components/Section/Section.styled.js","js/refs.js"],"sourcesContent":["import React from 'react';\nimport FilmItem from 'components/FilmItem/FilmItem';\n\nconst ListMovies = ({ trendMovies }) => {\n  return <FilmItem films={trendMovies} />;\n};\n\nexport default ListMovies;\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = 'trending/movie/week';\n\nconst getFetch = async () => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}`, {\n    params: {\n      api_key: refs.API_KEY,\n    },\n  });\n\n  return responce;\n};\nexport default getFetch;\n","import { Container } from 'components/Container/Container.styled';\nimport ListMovies from 'components/ListMovies/ListMovies';\nimport { Loader } from 'components/Loader/loader';\nimport { Section } from 'components/Section/Section.styled';\nimport getFetch from 'js/apiTrend';\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const trendMovies = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { results },\n        } = await getFetch();\n        setMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    trendMovies();\n  }, []);\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <h1 style={{ marginTop: '40px', textAlign: 'center', color: 'gray' }}>\n            Trending this week\n          </h1>\n          {loader && <Loader />}\n          {movies.length > 0 && <ListMovies trendMovies={movies} />}\n        </Container>\n      </Section>\n      {error && <div>Error, Please reload this page!</div>}\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const ListNameMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n\n  li {\n    border-radius: 10px;\n    background-color: white;\n    padding: 10px;\n    width: 200px;\n    margin-bottom: 10px;\n    font-weight: 600;\n    box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n      0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n    justify-content: center;\n  }\n\n  img {\n    border-radius: 10px;\n    margin-bottom: 5px;\n    display: block;\n  }\n`;\nexport const TitleFilm = styled.div`\n  display: flex;\n  padding: 10px 10px;\n  justify-content: center;\n  align-items: center;\n`;\n","import {\n  ListNameMovies,\n  TitleFilm,\n} from 'components/ListMovies/ListMovies.styled';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from '../../img/bart.jpg';\n\nconst FilmItem = ({ films }) => {\n  const styleLink = {\n    textDecoration: 'none',\n    color: 'black',\n  };\n\n  const location = useLocation();\n  // console.log(location);\n\n  return (\n    <ListNameMovies>\n      {films.map(({ id, title, poster_path }) => {\n        return (\n          <li key={id}>\n            <Link style={styleLink} to={`/movies/${id}`} state={location}>\n              <div>\n                <img\n                  src={\n                    poster_path\n                      ? ['https://image.tmdb.org/t/p/w500' + poster_path]\n                      : defaultPhoto\n                  }\n                  alt=\"poster\"\n                  width={200}\n                />\n              </div>\n\n              <TitleFilm> {title}</TitleFilm>\n            </Link>\n          </li>\n        );\n      })}\n    </ListNameMovies>\n  );\n};\n\nexport default FilmItem;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { Hourglass } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <Hourglass\n        visible={true}\n        height=\"50\"\n        width=\"50\"\n        ariaLabel=\"hourglass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        colors={['#306cce', '#72a1ed']}\n      />\n    </LoaderWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '9322e843d0da07a43a222238c5af1c78',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n\n//      --url 'https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&language=en-US&page=1' \\\n"],"names":["trendMovies","FilmItem","films","getFetch","axios","refs","params","api_key","responce","useState","movies","setMovies","loader","setLoader","error","setError","useEffect","results","data","style","marginTop","textAlign","color","length","ListNameMovies","styled","TitleFilm","styleLink","textDecoration","location","useLocation","map","id","title","poster_path","to","state","src","defaultPhoto","alt","width","LoaderWrap","LoadMessage","Loader","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","Section","BASE_URL","API_KEY","POSTER_URL"],"sourceRoot":""}